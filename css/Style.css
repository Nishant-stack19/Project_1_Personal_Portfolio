:root {
    /* Primary Colors */
    --primary-dark: #0f0f23;
    --secondary-dark: #1a1a2e;
    --tertiary-dark: #16213e;
    
    /* Blue Palette */
    --royal-blue: #2563eb;
    --electric-blue: #06b6d4;
    
    /* Accent Colors */
    --accent-primary: #00d9ff;
    
    /* Text Colors */
    --text-primary: #ffffff;
    --text-secondary: #cbd5e1;
    --text-muted: #94a3b8;
    
    /* Gradient Colors */
    --gradient-primary: linear-gradient(135deg, var(--royal-blue), var(--electric-blue));
    
    /* Transitions */
    --transition-fast: 0.2s cubic-bezier(0.4, 0, 0.2, 1);
    --transition-normal: 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    
    /* Shadows */
    --shadow-md: 0 4px 12px rgba(0, 0, 0, 0.4);
    --shadow-lg: 0 8px 24px rgba(0, 0, 0, 0.5);
    
    /* Border Radius */
    --radius-sm: 8px;
    --radius-lg: 16px;
    --radius-xl: 24px;
}

/* Universal Default Setting */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

html, body {
    height: 100%;
    width: 100%;
}

html {
    scroll-behavior: smooth;
}

body {
    font-family: 'Poppins', sans-serif;
    background: var(--primary-dark);
    color: var(--text-primary);
    line-height: 1.6;
    overflow-x: hidden;
}

/* Main content takes full screen */
.main-content {
    position: relative;
    height: 100vh;
    width: 100vw;
    overflow: hidden;
}

/* Background video fills screen */

.video-background video {
  width: 100%;
  height: 100%;
  object-fit: cover;
  min-height: 300px;
}
@media (max-width: 1024px) {
  .video-background {
    aspect-ratio: 4 / 3;
  }
}

@media (max-width: 768px) {
  .video-background {
    aspect-ratio: 3 / 2;
  }
}

@media (max-width: 480px) {
  .video-background {
    aspect-ratio: 9 / 16;
  }

  .video-background video {
    min-height: 250px;
  }
}
/* Fixed Navigation Bar */
.navbar {
    background: #000;
    backdrop-filter: blur(20px);
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    padding: 1rem 0;
    transition: all var(--transition-normal);
    z-index: 1000;
}

.navbar.scrolled {
    background: rgba(15, 15, 35, 0.98);
    box-shadow: var(--shadow-lg);
    padding: 0.5rem 0;
}

.navbar-brand {
    font-size: 1.8rem;
    font-weight: 700;
    color: var(--text-primary) !important;
    text-decoration: none;
    transition: all var(--transition-fast);
}

.brand-text {
    color: var(--text-primary);
}

.brand-accent {
    color: var(--accent-primary);
    font-size: 2rem;
}

.navbar-brand:hover {
    transform: scale(1.05);
}

.navbar-toggler {
    border: none;
    padding: 0.25rem 0.5rem;
    background: var(--gradient-primary);
    border-radius: var(--radius-sm);
}

/* The commented out code block for `.circle-card` is defining the styles for a circular flashcard
element. Here's a breakdown of what each property is doing: */
.navbar-toggler:focus {
    box-shadow: none;
}

.navbar-toggler-icon {
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='rgba%28255, 255, 255, 1%29' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e");
}

.nav-link {
    color: var(--text-secondary) !important;
    font-weight: 500;
    padding: 0.75rem 1rem !important;
    margin: 0 0.25rem;
    border-radius: var(--radius-sm);
    transition: all var(--transition-fast);
    position: relative;
}

.nav-link:hover,
.nav-link.active {
    color: var(--text-primary) !important;
    background: rgba(37, 99, 235, 0.1);
}

.nav-link::before {
    content: '';
    position: absolute;
    bottom: 0;
    left: 50%;
    width: 0;
    height: 2px;
    background: var(--gradient-primary);
    transition: all var(--transition-fast);
    transform: translateX(-50%);
}

.nav-link:hover::before,
.nav-link.active::before {
    width: 80%;
}

.resume-btn {
    background: var(--gradient-primary) !important;
    color: white !important;
    border-radius: var(--radius-lg) !important;
    padding: 0.75rem 1.5rem !important;
    margin-left: 0.5rem;
    font-weight: 600;
    box-shadow: var(--shadow-md);
}

.resume-btn:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-lg);
    color: white !important;
}

/* Responsive video background */
@media (max-width: 360px) {
    .video-background {
        height: 60vh;
    }
}

@media (max-width: 800px) {
    .video-background {
        height: 40vh;
    }
}

/* -------------------------------------------------------------------- */
/* Responsive Video Background */
/* The commented out code block for `.video-background` is defining the styles for a video background
element. Here's a breakdown of what each property is doing: */
.video-background {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  overflow: hidden;   
}

.video-background video {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
  min-height: 300px;
}

/* Flashcard Rectangle */
/* Wrapper to hold both cards */
.card-wrapper .circle-card{
  position: absolute;
  top: 175px;
  right: 100px;
} 
.circle-image {
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: 50%;
}
/* Rectangle Card */
.rectangle-card {
  position: relative;
  margin-top: 150px;
  margin-left: 60px;
   width: 750px;
  height: 400px;
  border-radius: 20px;
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  color: white;
  padding: 1.5rem;
  display: flex;
  flex-direction: column;
}

#contact-me{
  color: white 
}

/* Social media icons  */
.social-media {
  position: relative;
    display: flex;
    gap: 1rem;
    margin-right: 0%;
    width: 225px;
    position: absolute;
    right: 45px;
    bottom: 25px;
}
.hero-actions {
  position: absolute;
  display: block;
  bottom: 20px;
      height: 55px;
    width: 500px;
    z-index: -1;
}
.social-media a {
    width: 45px;
    height: 45px;
    background: black;
    color: var(--text-secondary);
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    text-decoration: none;
    transition: all var(--transition-normal);
    border: 1px solid rgba(255, 255, 255, 0.1);
}

.social-media a:hover {
    background: var(--gradient-primary);
    color: white;
    transform: translateY(-3px);
}

/* Circle Card */
.circle-card {
  width: 350px;
  height: 350px;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  color: white;
  display: flex;
  align-items: center;
  justify-content: center;
}
/* Mobile Tweaks */
/* The `@media (max-width: 768px)` rule in CSS is used to apply specific styles to elements when the
viewport width is equal to or less than 768 pixels. */
@media (max-width: 768px) {
  .rectangle-card {
    width: 90%;
    height: auto;
    padding: 2rem 1rem;
    flex-direction: column;
    text-align: center;
  }
}

/* ------------------------------------------------------------------------------- */
/* Base Typing Animation */
.typewriter {
  display: inline-block;
  overflow: hidden;
  white-space: nowrap;
  border-right: 2px solid #00f0ff;
  width: 0;
  font-size: 1.5rem;
  background: linear-gradient(90deg, #00f0ff, #7a5fff, #d139ff);
  background-clip: text;
  -webkit-background-clip: text;
  color: transparent;
  -webkit-text-fill-color: transparent;
  animation:
    typing 4s steps(20) infinite alternate,
    blink 0.7s step-end infinite;
}

/* Typing Animation Keyframes */
@keyframes typing {
  from { width: 0 }
  to   { width: 20ch } /* Default for desktop */
}

@keyframes blink {
  50% { border-color: transparent; }
}

/* Responsive Typing for Mobile */
@media (max-width: 768px) {
  .typewriter {
    font-size: 1.2rem;
    animation: typing-mobile 3.5s steps(15) infinite alternate, blink 0.7s step-end infinite;
  }

  @keyframes typing-mobile {
    from { width: 0 }
    to   { width: 15ch }
  }
}
.spline-container {
    width: 100%;
    height: 400px;
    /* border-radius: var(--radius-xl);
    overflow: hidden;
    box-shadow: var(--shadow-xl);
    background: var(--gradient-secondary);
    position: relative; */
    margin-bottom: 2rem;
}
spline-viewer {
    width: 100%;
    height: 100%;
}

/* hover effect on the glass card  */
.glass-card {
  position: relative;
  background: rgba(255, 255, 255, 0.05);
  backdrop-filter: blur(12px);
  -webkit-backdrop-filter: blur(12px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 1rem;
  overflow: hidden;
  transition: background 0.3s ease;
}
.glass-card{
  width: 100%;
  height: 80%;
}

.glass-card::before {
  content: "";
  position: absolute;
  top: var(--y, 50%);
  left: var(--x, 50%);
  transform: translate(-50%, -50%);
  width: 150%;
  height: 150%;
  background: radial-gradient(circle at center, rgba(123, 72, 243, 0.24), transparent 60%);
  pointer-events: none;
  transition: opacity 0.3s ease;
  opacity: 0;
}

.glass-card:hover::before {
  opacity: 1;
}

#icons {
  display: flex;
  flex-direction: row-reverse;
}
#icons a {
  
    width: 45px;
    height: 45px;
    background: black;
    color: var(--text-secondary);
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    text-decoration: none;
    transition: all var(--transition-normal);
    border: 1px solid rgba(255, 255, 255, 0.1);
}

#icons a:hover {
    background: var(--gradient-primary);
    color: white;
    transform: translateY(-3px);
}


.display-5{
  position: relative;
  top: 70px;
  width:300px;
}

.display-6{
  position: relative;

  width: 300px;
}

#skills{
  padding-top: 100px;
  height: 1000px;
}

#card-2{
  position:relative;
  width: 800px;
  display: flex;
  line-height: 25px;
  align-items: center;
  justify-content: space-evenly;
  flex-direction: column;
}